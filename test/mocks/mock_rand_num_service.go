// Code generated by MockGen. DO NOT EDIT.
// Source: qna/main/services (interfaces: IRandNumService)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIRandNumService is a mock of IRandNumService interface
type MockIRandNumService struct {
	ctrl     *gomock.Controller
	recorder *MockIRandNumServiceMockRecorder
}

// MockIRandNumServiceMockRecorder is the mock recorder for MockIRandNumService
type MockIRandNumServiceMockRecorder struct {
	mock *MockIRandNumService
}

// NewMockIRandNumService creates a new mock instance
func NewMockIRandNumService(ctrl *gomock.Controller) *MockIRandNumService {
	mock := &MockIRandNumService{ctrl: ctrl}
	mock.recorder = &MockIRandNumServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIRandNumService) EXPECT() *MockIRandNumServiceMockRecorder {
	return m.recorder
}

// GetRandNum mocks base method
func (m *MockIRandNumService) GetRandNum() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRandNum")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRandNum indicates an expected call of GetRandNum
func (mr *MockIRandNumServiceMockRecorder) GetRandNum() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRandNum", reflect.TypeOf((*MockIRandNumService)(nil).GetRandNum))
}
