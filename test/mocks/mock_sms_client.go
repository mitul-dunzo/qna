// Code generated by MockGen. DO NOT EDIT.
// Source: qna/main/clients (interfaces: ISmsClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockISmsClient is a mock of ISmsClient interface
type MockISmsClient struct {
	ctrl     *gomock.Controller
	recorder *MockISmsClientMockRecorder
}

// MockISmsClientMockRecorder is the mock recorder for MockISmsClient
type MockISmsClientMockRecorder struct {
	mock *MockISmsClient
}

// NewMockISmsClient creates a new mock instance
func NewMockISmsClient(ctrl *gomock.Controller) *MockISmsClient {
	mock := &MockISmsClient{ctrl: ctrl}
	mock.recorder = &MockISmsClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockISmsClient) EXPECT() *MockISmsClientMockRecorder {
	return m.recorder
}

// SendOtpSms mocks base method
func (m *MockISmsClient) SendOtpSms(arg0, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendOtpSms", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendOtpSms indicates an expected call of SendOtpSms
func (mr *MockISmsClientMockRecorder) SendOtpSms(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendOtpSms", reflect.TypeOf((*MockISmsClient)(nil).SendOtpSms), arg0, arg1)
}
